jobs:
- job: DotnetExtensionPackCI
  timeoutInMinutes: 30
  cancelTimeoutInMinutes: 2
  variables:
  - ${{ if and(notin(variables['Build.Reason'], 'PullRequest'), eq(variables['Build.SourceBranch'], 'refs/heads/main')) }}:
    # Force CodeQL enabled so it may be run on any branch
    - name: Codeql.Enabled
      value: true
    # Do not let CodeQL 3000 Extension gate scan frequency
    - name: Codeql.Cadence
      value: 0
    - name: Codeql.TSAEnabled
      value: true 
  pool:
      vmImage: 'windows-2022'

  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '14.x'
    displayName: 'Install Node.js'
  
  - ${{ if and(notin(variables['Build.Reason'], 'PullRequest'), eq(variables['Build.SourceBranch'], 'refs/heads/main')) }}:
    - task: UseDotNet@2
    - task: CodeQL3000Init@0
      displayName: CodeQL Initialize 

  - script: |
      npm ci
    displayName: 'npm install'

  - task: CmdLine@2
    displayName: 'Build .NET extension pack'
    inputs:
      script: |
        echo Building .NET extension pack vsix...
        npx vsce@latest package

  - ${{ if and(notin(variables['Build.Reason'], 'PullRequest'), eq(variables['Build.SourceBranch'], 'refs/heads/main')) }}:
    - task: CodeQL3000Finalize@0
      displayName: CodeQL Finalize
        
  - task: CopyFiles@2
    inputs:
      Contents: '*.vsix'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'
      publishLocation: 'Container'
